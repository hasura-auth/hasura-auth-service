{"version":3,"sources":["components/login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Example","useForm","register","handleSubmit","watch","formState","errors","className","onClick","onSubmit","data","console","log","type","name","defaultValue","htmlFor","placeholder","required","id","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAMe,SAASA,IAEtB,MAKIC,cAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,EAGEC,MAHF,EAIEC,UAAaC,OAQf,OACE,qBAAKC,UAAU,6DAAf,SACE,qBAAKA,UAAU,oDAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAU,6BAAhB,4BACA,sBAAKA,UAAU,sBAAf,UACE,wBACEC,QAAS,aAGTD,UAAU,gMAJZ,SAME,sBAAKA,UAAU,oBAAf,UACE,mBAAGA,UAAU,wBACb,mBAAGA,UAAU,OAAb,0BAIJ,wBACEC,QAAS,aAGTD,UAAU,gMAJZ,SAME,qBAAKA,UAAU,0CAAf,SAEE,mBAAGA,UAAU,OAAb,+BAMR,sBAAKA,UAAU,6BAAf,UACE,mBAAGA,UAAU,2CACb,sBAAMA,UAAU,OAAhB,8CAGF,uBACEA,UAAU,YAIVE,SAAUN,GAhDiB,SAACO,GAEpCC,QAAQC,IAAIF,MAyCN,UAcE,uBAAOG,KAAK,SAASC,KAAK,WAAWC,aAAa,SAClD,sBAAKR,UAAU,mCAAf,UACE,gCACE,uBAAOS,QAAQ,gBAAgBT,UAAU,UAAzC,2BAGA,mCACEM,KAAK,QACLN,UAAU,6NACVU,YAAY,gBACZF,aAAa,kBACTb,EAAS,QAAS,CAAEgB,UAAU,SAGtC,gCACE,uBAAOF,QAAQ,WAAWT,UAAU,UAApC,sBAGA,mCACEM,KAAK,WACLI,YAAY,WACZF,aAAa,QACbR,UAAU,8NACNL,EAAS,WAAY,CAAEgB,UAAU,YAa3C,sBAAKX,UAAU,oCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,uBACEY,GAAG,cACHL,KAAK,cACLD,KAAK,WACLN,UAAU,0EAEZ,uBAAOS,QAAQ,cAAcT,UAAU,mCAAvC,4BAKF,qBAAKA,UAAU,UAAf,SACE,mBAAGa,KAAK,IAAIb,UAAU,oDAAtB,wCAMJ,8BACE,yBACEC,QAAS,aACTD,UAAU,sOAFZ,UAIE,sBAAMA,UAAU,qDAJlB,yBCpHCc,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCMSe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.431f8712.chunk.js","sourcesContent":["// import LoginMethods from '@/../../hasura-auth-client/dist/model/LoginMethods';\n// import IFormInputs from '@/../../hasura-auth-client/dist/model/FormInputs';\n// import useHasuraAuth from '@/lib/useHasuraAuth';\n// import { LockClosedIcon } from '@heroicons/react/solid';\nimport { SubmitHandler, useForm } from 'react-hook-form';\n\nexport default function Example() {\n  // const { socialLogin, localLogin } = useHasuraAuth();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors }\n  } = useForm();\n\n  const onSubmit: SubmitHandler<any> = (data) => {\n    // localLogin(data);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"min-h-screen  flex items-center justify-center bg-gray-700\">\n      <div className=\"bg-gray-200 py-8 px-4 sm:px-6 lg:px-12 rounded-lg\">\n        <div className=\"max-w-md w-full space-y-12\">\n          <div className=\"text-center\">\n            <span className=\"self-center  text-gray-500\"> Sign in with </span>\n            <div className=\"flex justify-evenly\">\n              <button\n                onClick={() => {\n                  // socialLogin(LoginMethods.GITHUB);\n                }}\n                className=\"mt-6 group relative w-1/3 flex justify-center py-2 px-4 border border-gray-300 text-sm  rounded-md text-black bg-white hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 \"\n              >\n                <div className=\"flex items-center\">\n                  <i className=\"fa-2x fab fa-github\" />\n                  <p className=\"ml-1\"> Github</p>\n                </div>\n              </button>\n\n              <button\n                onClick={() => {\n                  // socialLogin(LoginMethods.GOOGLE);\n                }}\n                className=\"mt-6 group relative w-1/3 flex justify-center py-2 px-4 border border-gray-300 text-sm  rounded-md text-black bg-white hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 \"\n              >\n                <div className=\"flex place-content-center items-center \">\n                  {/* <img alt=\"...\" src={require('assets/img/icons/google.svg')} /> */}\n                  <p className=\"ml-1\"> Google</p>\n                </div>\n              </button>\n            </div>\n          </div>\n\n          <div className=\" text-center text-gray-500\">\n            <p className=\"border-b-1 border-yellow-50 mb-4 -mt-4\" />\n            <span className=\"mt-6\"> Or sign in with credentials </span>\n          </div>\n\n          <form\n            className=\"space-y-6\"\n            // action=\"http://localhost:8000/auth/social/github\"\n            // method=\"GET\"\n\n            onSubmit={handleSubmit(onSubmit)}\n            // onSubmit={(e) => {\n            //   e.preventDefault();\n            //   const form = new FormData(e.target);\n            //   const formula = form.get('formula');\n            //   console.log(formula);\n            //   localLogin(new FormData());\n            // }}\n          >\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Email address\"\n                  defaultValue=\"admin@test.com\"\n                  {...register('email', { required: true })}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Password\n                </label>\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  defaultValue=\"admin\"\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  {...register('password', { required: true })}\n                />\n\n                {/* <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Password\"\n                /> */}\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                onClick={() => {}}\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  {/* <LockClosedIcon\n                    className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\"\n                    aria-hidden=\"true\"\n                  /> */}\n                </span>\n                Sign in\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './components/login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}